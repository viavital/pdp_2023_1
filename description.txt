Опис основного призначення програми:
1. Користувач має список в csv форматі з особовим рахунком, email, ПІБ
2. Також є pdf файл на кожен особовий рахунок (назва файлу сходиться з номером особового рахунку).
3. Треба розіслати на email кожному абоненту його pdf файл.
4. Максимально зручно встановити на будь який компютер.


Опис потрібного функціоналу:
1. Відправляти рахунки повинен тільки автентифікований користувач.
2. Користувач має мати можливість визначити свій шаблон повідомлення.
Приклад (Тема повідомлення:"Ваш рахунок від ОСББ", Повідомлення: "Подивіться приєднаний файл, будь ласка.")
3. Користувач має помістити список з абонентами та самі рахунки в відповідні папки. 
(треба вивчити можливість заливки файлів через запити). Програма має розуміти відношення файлів до авторизованого користувача.
5. Користувач через запит  /sendMails розсилає листи.
6. Листи які не відправились(помилка п), мають повертатись як відповідь користувачу та десь зберігатись.
7. Якщо лист відправлений успішно, файл відповідного рахунку має видалятись з папки.

План реалізації основних компонентів:
1. Користувач, через запит може зареєструватись. 
2. Базу юзерів треба зберігати в sql базі(подумати що легше буде використовувати - можливо sqLite).
3. На кожного юзера має бути папка.
4.Має бути роут за яким користувач вказує шаблон повідомлення {topic: string, body: string} та в папці користувача
створюється mailTemplate.json в який записується дана інформація. (можливо варто записувати в базу такі шаблони)
4. Також має бути роут /getMyTemplate - для перевірки шаблону який буде використовуватись для відправки листів.
5. Користувачу в вручну(поки що,) копіює файли в свою папку.
6. В папці користувач має створити файл з конфігом для IMAP доступу:
{"mail": string, passwords: Array<string>}
3. Роути для запитів:
/createUser
/login
/getCurrentContent - повертає список файлів в папках з рахунками та списком абонентів.
/flushContent - чистить вміст папок
/sendMails - власне парсить список та відправляє листи

Обмеження:
Модуль відправки повідомлень має містити логіку обмеження відправки листів 50штук в день на один пароль для одної пошти.
архітектура має бути гнучкою щоб колись відмовитись від логіки обмежень.
